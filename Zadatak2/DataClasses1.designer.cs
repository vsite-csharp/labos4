#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Vsite.CSharp.Labos4.Zadatak2
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Evidencija")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertstudent(student instance);
    partial void Updatestudent(student instance);
    partial void Deletestudent(student instance);
    partial void Insertispit(ispit instance);
    partial void Updateispit(ispit instance);
    partial void Deleteispit(ispit instance);
    partial void Insertpredmet(predmet instance);
    partial void Updatepredmet(predmet instance);
    partial void Deletepredmet(predmet instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::Vsite.CSharp.Labos4.Zadatak2.Properties.Settings.Default.EvidencijaConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<student> students
		{
			get
			{
				return this.GetTable<student>();
			}
		}
		
		public System.Data.Linq.Table<ispit> ispits
		{
			get
			{
				return this.GetTable<ispit>();
			}
		}
		
		public System.Data.Linq.Table<predmet> predmets
		{
			get
			{
				return this.GetTable<predmet>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.student")]
	public partial class student : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _stud_ID;
		
		private string _ime;
		
		private string _prezime;
		
		private string _jmbg;
		
		private System.Nullable<System.DateTime> _datRod;
		
		private System.Nullable<int> _pbrRod;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onstud_IDChanging(int value);
    partial void Onstud_IDChanged();
    partial void OnimeChanging(string value);
    partial void OnimeChanged();
    partial void OnprezimeChanging(string value);
    partial void OnprezimeChanged();
    partial void OnjmbgChanging(string value);
    partial void OnjmbgChanged();
    partial void OndatRodChanging(System.Nullable<System.DateTime> value);
    partial void OndatRodChanged();
    partial void OnpbrRodChanging(System.Nullable<int> value);
    partial void OnpbrRodChanged();
    #endregion
		
		public student()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stud_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int stud_ID
		{
			get
			{
				return this._stud_ID;
			}
			set
			{
				if ((this._stud_ID != value))
				{
					this.Onstud_IDChanging(value);
					this.SendPropertyChanging();
					this._stud_ID = value;
					this.SendPropertyChanged("stud_ID");
					this.Onstud_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ime", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string ime
		{
			get
			{
				return this._ime;
			}
			set
			{
				if ((this._ime != value))
				{
					this.OnimeChanging(value);
					this.SendPropertyChanging();
					this._ime = value;
					this.SendPropertyChanged("ime");
					this.OnimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_prezime", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string prezime
		{
			get
			{
				return this._prezime;
			}
			set
			{
				if ((this._prezime != value))
				{
					this.OnprezimeChanging(value);
					this.SendPropertyChanging();
					this._prezime = value;
					this.SendPropertyChanged("prezime");
					this.OnprezimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_jmbg", DbType="NVarChar(13)")]
		public string jmbg
		{
			get
			{
				return this._jmbg;
			}
			set
			{
				if ((this._jmbg != value))
				{
					this.OnjmbgChanging(value);
					this.SendPropertyChanging();
					this._jmbg = value;
					this.SendPropertyChanged("jmbg");
					this.OnjmbgChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_datRod", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> datRod
		{
			get
			{
				return this._datRod;
			}
			set
			{
				if ((this._datRod != value))
				{
					this.OndatRodChanging(value);
					this.SendPropertyChanging();
					this._datRod = value;
					this.SendPropertyChanged("datRod");
					this.OndatRodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pbrRod", DbType="Int")]
		public System.Nullable<int> pbrRod
		{
			get
			{
				return this._pbrRod;
			}
			set
			{
				if ((this._pbrRod != value))
				{
					this.OnpbrRodChanging(value);
					this.SendPropertyChanging();
					this._pbrRod = value;
					this.SendPropertyChanged("pbrRod");
					this.OnpbrRodChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ispit")]
	public partial class ispit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _stud_ID;
		
		private System.DateTime _dat_ispit;
		
		private short _pred_ID;
		
		private System.Nullable<short> _nast_ID;
		
		private System.Nullable<short> _ocjena;
		
		private EntityRef<predmet> _predmet;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onstud_IDChanging(int value);
    partial void Onstud_IDChanged();
    partial void Ondat_ispitChanging(System.DateTime value);
    partial void Ondat_ispitChanged();
    partial void Onpred_IDChanging(short value);
    partial void Onpred_IDChanged();
    partial void Onnast_IDChanging(System.Nullable<short> value);
    partial void Onnast_IDChanged();
    partial void OnocjenaChanging(System.Nullable<short> value);
    partial void OnocjenaChanged();
    #endregion
		
		public ispit()
		{
			this._predmet = default(EntityRef<predmet>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stud_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int stud_ID
		{
			get
			{
				return this._stud_ID;
			}
			set
			{
				if ((this._stud_ID != value))
				{
					this.Onstud_IDChanging(value);
					this.SendPropertyChanging();
					this._stud_ID = value;
					this.SendPropertyChanged("stud_ID");
					this.Onstud_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dat_ispit", DbType="SmallDateTime NOT NULL", IsPrimaryKey=true)]
		public System.DateTime dat_ispit
		{
			get
			{
				return this._dat_ispit;
			}
			set
			{
				if ((this._dat_ispit != value))
				{
					this.Ondat_ispitChanging(value);
					this.SendPropertyChanging();
					this._dat_ispit = value;
					this.SendPropertyChanged("dat_ispit");
					this.Ondat_ispitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pred_ID", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short pred_ID
		{
			get
			{
				return this._pred_ID;
			}
			set
			{
				if ((this._pred_ID != value))
				{
					if (this._predmet.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onpred_IDChanging(value);
					this.SendPropertyChanging();
					this._pred_ID = value;
					this.SendPropertyChanged("pred_ID");
					this.Onpred_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nast_ID", DbType="SmallInt")]
		public System.Nullable<short> nast_ID
		{
			get
			{
				return this._nast_ID;
			}
			set
			{
				if ((this._nast_ID != value))
				{
					this.Onnast_IDChanging(value);
					this.SendPropertyChanging();
					this._nast_ID = value;
					this.SendPropertyChanged("nast_ID");
					this.Onnast_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ocjena", DbType="SmallInt")]
		public System.Nullable<short> ocjena
		{
			get
			{
				return this._ocjena;
			}
			set
			{
				if ((this._ocjena != value))
				{
					this.OnocjenaChanging(value);
					this.SendPropertyChanging();
					this._ocjena = value;
					this.SendPropertyChanged("ocjena");
					this.OnocjenaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="predmet_ispit", Storage="_predmet", ThisKey="pred_ID", OtherKey="pred_ID", IsForeignKey=true)]
		public predmet predmet
		{
			get
			{
				return this._predmet.Entity;
			}
			set
			{
				predmet previousValue = this._predmet.Entity;
				if (((previousValue != value) 
							|| (this._predmet.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._predmet.Entity = null;
						previousValue.ispits.Remove(this);
					}
					this._predmet.Entity = value;
					if ((value != null))
					{
						value.ispits.Add(this);
						this._pred_ID = value.pred_ID;
					}
					else
					{
						this._pred_ID = default(short);
					}
					this.SendPropertyChanged("predmet");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.predmet")]
	public partial class predmet : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _pred_ID;
		
		private string _naziv_pred;
		
		private System.Nullable<short> _sati_pred;
		
		private System.Nullable<short> _sati_av;
		
		private System.Nullable<short> _sati_lab;
		
		private EntitySet<ispit> _ispits;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onpred_IDChanging(short value);
    partial void Onpred_IDChanged();
    partial void Onnaziv_predChanging(string value);
    partial void Onnaziv_predChanged();
    partial void Onsati_predChanging(System.Nullable<short> value);
    partial void Onsati_predChanged();
    partial void Onsati_avChanging(System.Nullable<short> value);
    partial void Onsati_avChanged();
    partial void Onsati_labChanging(System.Nullable<short> value);
    partial void Onsati_labChanged();
    #endregion
		
		public predmet()
		{
			this._ispits = new EntitySet<ispit>(new Action<ispit>(this.attach_ispits), new Action<ispit>(this.detach_ispits));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pred_ID", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short pred_ID
		{
			get
			{
				return this._pred_ID;
			}
			set
			{
				if ((this._pred_ID != value))
				{
					this.Onpred_IDChanging(value);
					this.SendPropertyChanging();
					this._pred_ID = value;
					this.SendPropertyChanged("pred_ID");
					this.Onpred_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_naziv_pred", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string naziv_pred
		{
			get
			{
				return this._naziv_pred;
			}
			set
			{
				if ((this._naziv_pred != value))
				{
					this.Onnaziv_predChanging(value);
					this.SendPropertyChanging();
					this._naziv_pred = value;
					this.SendPropertyChanged("naziv_pred");
					this.Onnaziv_predChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sati_pred", DbType="SmallInt")]
		public System.Nullable<short> sati_pred
		{
			get
			{
				return this._sati_pred;
			}
			set
			{
				if ((this._sati_pred != value))
				{
					this.Onsati_predChanging(value);
					this.SendPropertyChanging();
					this._sati_pred = value;
					this.SendPropertyChanged("sati_pred");
					this.Onsati_predChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sati_av", DbType="SmallInt")]
		public System.Nullable<short> sati_av
		{
			get
			{
				return this._sati_av;
			}
			set
			{
				if ((this._sati_av != value))
				{
					this.Onsati_avChanging(value);
					this.SendPropertyChanging();
					this._sati_av = value;
					this.SendPropertyChanged("sati_av");
					this.Onsati_avChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sati_lab", DbType="SmallInt")]
		public System.Nullable<short> sati_lab
		{
			get
			{
				return this._sati_lab;
			}
			set
			{
				if ((this._sati_lab != value))
				{
					this.Onsati_labChanging(value);
					this.SendPropertyChanging();
					this._sati_lab = value;
					this.SendPropertyChanged("sati_lab");
					this.Onsati_labChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="predmet_ispit", Storage="_ispits", ThisKey="pred_ID", OtherKey="pred_ID")]
		public EntitySet<ispit> ispits
		{
			get
			{
				return this._ispits;
			}
			set
			{
				this._ispits.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ispits(ispit entity)
		{
			this.SendPropertyChanging();
			entity.predmet = this;
		}
		
		private void detach_ispits(ispit entity)
		{
			this.SendPropertyChanging();
			entity.predmet = null;
		}
	}
}
#pragma warning restore 1591
